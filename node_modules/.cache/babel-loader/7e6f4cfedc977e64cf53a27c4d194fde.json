{"ast":null,"code":"var _jsxFileName = \"/Users/liuyang/Documents/yideng/jira/src/screens/project-list/list.tsx\";\nimport { Table } from \"antd\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = ({\n  list,\n  users\n}) => {\n  return /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u540D\\u79F0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"\\u8D1F\\u8D23\\u4EBA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: list.map(project => {\n        var _users$find;\n\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ((_users$find = users.find(users => users.id === project.personId)) === null || _users$find === void 0 ? void 0 : _users$find.name) || '--'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 12\n  }, this);\n};\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/liuyang/Documents/yideng/jira/src/screens/project-list/list.tsx"],"names":["Table","React","List","list","users","map","project","name","find","id","personId"],"mappings":";AAAA,SAASA,KAAT,QAAsB,MAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAeA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAMC,EAAAA;AAAN,CAAD,KAA6B;AAC7C,sBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,sBAAO;AAAA,4BACH;AAAA,6BACI;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADG,eAOH;AAAA,gBAEQD,IAAI,CAACE,GAAL,CAASC,OAAO,IAAI;AAAA;;AAChB,4BAAO;AAAA,kCACH;AAAA,sBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAA,sBAAK,gBAAAH,KAAK,CAACI,IAAN,CAAWJ,KAAK,IAAIA,KAAK,CAACK,EAAN,KAAaH,OAAO,CAACI,QAAzC,6DAAoDH,IAApD,KAA4D;AAAjE;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA,WAASD,OAAO,CAACG,EAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AAIH,OALD;AAFR;AAAA;AAAA;AAAA;AAAA,YAPG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAkBH,CApBM;KAAMP,I","sourcesContent":["import { Table } from \"antd\"\nimport React from \"react\"\nimport {User} from \"screens/project-list/search-panel\"\n\nexport interface Project {\n    id: string;\n    name: string;\n    personId: string;\n    pin: boolean;\n    organization: string;\n}\n\ninterface ListProps {\n    list: Project[];\n    users: User[];\n}\nexport const List = ({list,users}: ListProps) => {\n    return <Table/>\n    return <table>\n        <thead>\n            <tr>\n                <th>名称</th>\n                <th>负责人</th>\n            </tr>\n        </thead>\n        <tbody>\n            {\n                list.map(project => {\n                    return <tr key={project.id}>\n                        <td>{project.name}</td>\n                        <td>{users.find(users => users.id === project.personId)?.name || '--'}</td>\n                    </tr>\n                })\n            }\n        </tbody>\n    </table>\n}"]},"metadata":{},"sourceType":"module"}