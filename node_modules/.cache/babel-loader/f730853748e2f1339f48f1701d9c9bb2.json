{"ast":null,"code":"var _jsxFileName = \"/Users/liuyang/Documents/yideng/jira/src/screens/project-list/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { SearchPanel } from \"./search-panel\";\nimport { List } from \"./list\";\nimport { useState, useEffect } from \"react\";\nimport { cleanObject, useMount, useDebounce } from \"../../utils\"; // import * as qs from \"qs\"\n\nimport { useHttp } from \"utils/http\";\nimport styled from \"@emotion/styled\";\nimport { Typography } from \"antd\"; // const apiUrl = 'http://localhost:3001'\n// const apiUrl = process.env.REACT_APP_API_URL\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProjectListScreen = () => {\n  _s();\n\n  // const [list, setList] = useState([])\n  // const [isLoading, setIsLoading] = useState(false)\n  // const [error, setError] = useState<null | Error>(null)\n  const [users, setUsers] = useState([]);\n  const [param, setParam] = useState({\n    name: '',\n    personId: ''\n  });\n  const debounceParam = useDebounce(param, 200);\n  const client = useHttp();\n  const {};\n  useEffect(() => {\n    setIsLoading(true);\n    client('projects', {\n      data: cleanObject(debounceParam)\n    }).then(setList).catch(error => {\n      setList([]);\n      setError(error);\n    }).finally(() => setIsLoading(false)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debounceParam]);\n  useMount(() => {\n    client('users').then(setUsers);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u9879\\u76EE\\u5217\\u8868\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchPanel, {\n      users: users || [],\n      param: param,\n      setParam: setParam\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), error ? /*#__PURE__*/_jsxDEV(Typography.Text, {\n      type: \"danger\",\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(List, {\n      users: users,\n      dataSource: list,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProjectListScreen, \"wPMw5F1uErA/pqsMdYMSC1yGguA=\", false, function () {\n  return [useDebounce, useHttp, useMount];\n});\n\n_c = ProjectListScreen;\nconst Container = styled.div`\n    padding: 3.2rem;\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProjectListScreen\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["/Users/liuyang/Documents/yideng/jira/src/screens/project-list/index.tsx"],"names":["React","SearchPanel","List","useState","useEffect","cleanObject","useMount","useDebounce","useHttp","styled","Typography","ProjectListScreen","users","setUsers","param","setParam","name","personId","debounceParam","client","setIsLoading","data","then","setList","catch","error","setError","finally","message","list","isLoading","Container","div"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,WAAR,EAAqBC,QAArB,EAA+BC,WAA/B,QAAiD,aAAjD,C,CACA;;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,UAAT,QAA2B,MAA3B,C,CAEA;AACA;;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACnC;AACA;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC;AAC/Ba,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;AAIA,QAAMC,aAAa,GAAGX,WAAW,CAACO,KAAD,EAAQ,GAAR,CAAjC;AACA,QAAMK,MAAM,GAAGX,OAAO,EAAtB;AACA,QAAM,EAAN;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAD,IAAAA,MAAM,CAAC,UAAD,EAAa;AAACE,MAAAA,IAAI,EAAEhB,WAAW,CAACa,aAAD;AAAlB,KAAb,CAAN,CACCI,IADD,CACMC,OADN,EAECC,KAFD,CAEOC,KAAK,IAAI;AACZF,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KALD,EAMCE,OAND,CAMS,MAAMP,YAAY,CAAC,KAAD,CAN3B,EAFY,CASZ;AACH,GAVQ,EAUN,CAACF,aAAD,CAVM,CAAT;AAWAZ,EAAAA,QAAQ,CAAC,MAAM;AACXa,IAAAA,MAAM,CAAC,OAAD,CAAN,CAAgBG,IAAhB,CAAqBT,QAArB;AACH,GAFO,CAAR;AAGA,sBAAO,QAAC,SAAD;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,WAAD;AAAa,MAAA,KAAK,EAAED,KAAK,IAAI,EAA7B;AAAiC,MAAA,KAAK,EAAEE,KAAxC;AAA+C,MAAA,QAAQ,EAAEC;AAAzD;AAAA;AAAA;AAAA;AAAA,YAFG,EAGFU,KAAK,gBAAG,QAAC,UAAD,CAAY,IAAZ;AAAiB,MAAA,IAAI,EAAE,QAAvB;AAAA,gBAAmCA,KAAK,CAACG;AAAzC;AAAA;AAAA;AAAA;AAAA,YAAH,GAA0E,IAH7E,eAIH,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEhB,KAAb;AAAoB,MAAA,UAAU,EAAEiB,IAAhC;AAAsC,MAAA,OAAO,EAAEC;AAA/C;AAAA;AAAA;AAAA;AAAA,YAJG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAMH,CAjCM;;GAAMnB,iB;UASaJ,W,EACPC,O,EAcfF,Q;;;KAxBSK,iB;AAmCb,MAAMoB,SAAS,GAAGtB,MAAM,CAACuB,GAAI;AAC7B;AACA,CAFA;MAAMD,S","sourcesContent":["import React from \"react\"\nimport { SearchPanel } from \"./search-panel\"\nimport { List } from \"./list\"\nimport { useState, useEffect } from \"react\"\nimport {cleanObject, useMount, useDebounce} from \"../../utils\"\n// import * as qs from \"qs\"\nimport { useHttp } from \"utils/http\"\nimport styled from \"@emotion/styled\"\nimport { Typography } from \"antd\"\n\n// const apiUrl = 'http://localhost:3001'\n// const apiUrl = process.env.REACT_APP_API_URL\nexport const ProjectListScreen = () => {\n    // const [list, setList] = useState([])\n    // const [isLoading, setIsLoading] = useState(false)\n    // const [error, setError] = useState<null | Error>(null)\n    const [users, setUsers] = useState([])\n    const [param, setParam] = useState({\n        name: '',\n        personId: ''\n    })\n    const debounceParam = useDebounce(param, 200)\n    const client = useHttp()\n    const {}\n\n    useEffect(() => {\n        setIsLoading(true)\n        client('projects', {data: cleanObject(debounceParam)})\n        .then(setList)\n        .catch(error => {\n            setList([])\n            setError(error)\n        })\n        .finally(() => setIsLoading(false))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [debounceParam]);\n    useMount(() => {\n        client('users').then(setUsers)\n    })\n    return <Container>\n        <h1>项目列表</h1>\n        <SearchPanel users={users || []} param={param} setParam={setParam}></SearchPanel>\n        {error ? <Typography.Text type={\"danger\"}>{ error.message }</Typography.Text> : null}\n        <List users={users} dataSource={list} loading={isLoading}></List>\n    </Container>\n}\n\nconst Container = styled.div`\n    padding: 3.2rem;\n`\n"]},"metadata":{},"sourceType":"module"}