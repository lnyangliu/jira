{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useKeyRecords;\nexports.OVERFLOW_KEY = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _timeUtil = require(\"../utils/timeUtil\");\n\nvar PATH_SPLIT = '__RC_UTIL_PATH_SPLIT__';\n\nvar getPathStr = function getPathStr(keyPath) {\n  return keyPath.join(PATH_SPLIT);\n};\n\nvar getPathKeys = function getPathKeys(keyPathStr) {\n  return keyPathStr.split(PATH_SPLIT);\n};\n\nvar OVERFLOW_KEY = 'rc-menu-more';\nexports.OVERFLOW_KEY = OVERFLOW_KEY;\n\nfunction useKeyRecords() {\n  var _React$useState = React.useState({}),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      internalForceUpdate = _React$useState2[1];\n\n  var key2pathRef = (0, React.useRef)(new Map());\n  var path2keyRef = (0, React.useRef)(new Map());\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      overflowKeys = _React$useState4[0],\n      setOverflowKeys = _React$useState4[1];\n\n  var updateRef = (0, React.useRef)(0);\n  var destroyRef = (0, React.useRef)(false);\n\n  var forceUpdate = function forceUpdate() {\n    if (!destroyRef.current) {\n      internalForceUpdate({});\n    }\n  };\n\n  var registerPath = (0, React.useCallback)(function (key, keyPath) {\n    // Warning for invalidate or duplicated `key`\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _warning.default)(!key2pathRef.current.has(key), \"Duplicated key '\".concat(key, \"' used in Menu by path [\").concat(keyPath.join(' > '), \"]\"));\n    } // Fill map\n\n\n    var connectedPath = getPathStr(keyPath);\n    path2keyRef.current.set(connectedPath, key);\n    key2pathRef.current.set(key, connectedPath);\n    updateRef.current += 1;\n    var id = updateRef.current;\n    (0, _timeUtil.nextSlice)(function () {\n      if (id === updateRef.current) {\n        forceUpdate();\n      }\n    });\n  }, []);\n  var unregisterPath = (0, React.useCallback)(function (key, keyPath) {\n    var connectedPath = getPathStr(keyPath);\n    path2keyRef.current.delete(connectedPath);\n    key2pathRef.current.delete(key);\n  }, []);\n  var refreshOverflowKeys = (0, React.useCallback)(function (keys) {\n    setOverflowKeys(keys);\n  }, []);\n  var getKeyPath = (0, React.useCallback)(function (eventKey, includeOverflow) {\n    var fullPath = key2pathRef.current.get(eventKey) || '';\n    var keys = getPathKeys(fullPath);\n\n    if (includeOverflow && overflowKeys.includes(keys[0])) {\n      keys.unshift(OVERFLOW_KEY);\n    }\n\n    return keys;\n  }, [overflowKeys]);\n  var isSubPathKey = (0, React.useCallback)(function (pathKeys, eventKey) {\n    return pathKeys.some(function (pathKey) {\n      var pathKeyList = getKeyPath(pathKey, true);\n      return pathKeyList.includes(eventKey);\n    });\n  }, [getKeyPath]);\n\n  var getKeys = function getKeys() {\n    var keys = (0, _toConsumableArray2.default)(key2pathRef.current.keys());\n\n    if (overflowKeys.length) {\n      keys.push(OVERFLOW_KEY);\n    }\n\n    return keys;\n  };\n  /**\n   * Find current key related child path keys\n   */\n\n\n  var getSubPathKeys = (0, React.useCallback)(function (key) {\n    var connectedPath = \"\".concat(key2pathRef.current.get(key)).concat(PATH_SPLIT);\n    var pathKeys = new Set();\n    (0, _toConsumableArray2.default)(path2keyRef.current.keys()).forEach(function (pathKey) {\n      if (pathKey.startsWith(connectedPath)) {\n        pathKeys.add(path2keyRef.current.get(pathKey));\n      }\n    });\n    return pathKeys;\n  }, []);\n  React.useEffect(function () {\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n  return {\n    // Register\n    registerPath: registerPath,\n    unregisterPath: unregisterPath,\n    refreshOverflowKeys: refreshOverflowKeys,\n    // Util\n    isSubPathKey: isSubPathKey,\n    getKeyPath: getKeyPath,\n    getKeys: getKeys,\n    getSubPathKeys: getSubPathKeys\n  };\n}","map":{"version":3,"sources":["/Users/liuyang/Documents/yideng/jira/node_modules/rc-menu/lib/hooks/useKeyRecords.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","default","useKeyRecords","OVERFLOW_KEY","_toConsumableArray2","_slicedToArray2","React","_warning","_timeUtil","PATH_SPLIT","getPathStr","keyPath","join","getPathKeys","keyPathStr","split","_React$useState","useState","_React$useState2","internalForceUpdate","key2pathRef","useRef","Map","path2keyRef","_React$useState3","_React$useState4","overflowKeys","setOverflowKeys","updateRef","destroyRef","forceUpdate","current","registerPath","useCallback","key","process","env","NODE_ENV","has","concat","connectedPath","set","id","nextSlice","unregisterPath","delete","refreshOverflowKeys","keys","getKeyPath","eventKey","includeOverflow","fullPath","get","includes","unshift","isSubPathKey","pathKeys","some","pathKey","pathKeyList","getKeys","length","push","getSubPathKeys","Set","forEach","startsWith","add","useEffect"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,8CAAD,CAApC;;AAEAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;AACAH,OAAO,CAACI,YAAR,GAAuB,KAAK,CAA5B;;AAEA,IAAIC,mBAAmB,GAAGR,sBAAsB,CAACD,OAAO,CAAC,0CAAD,CAAR,CAAhD;;AAEA,IAAIU,eAAe,GAAGT,sBAAsB,CAACD,OAAO,CAAC,sCAAD,CAAR,CAA5C;;AAEA,IAAIW,KAAK,GAAGZ,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIY,QAAQ,GAAGX,sBAAsB,CAACD,OAAO,CAAC,qBAAD,CAAR,CAArC;;AAEA,IAAIa,SAAS,GAAGb,OAAO,CAAC,mBAAD,CAAvB;;AAEA,IAAIc,UAAU,GAAG,wBAAjB;;AAEA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,OAApB,EAA6B;AAC5C,SAAOA,OAAO,CAACC,IAAR,CAAaH,UAAb,CAAP;AACD,CAFD;;AAIA,IAAII,WAAW,GAAG,SAASA,WAAT,CAAqBC,UAArB,EAAiC;AACjD,SAAOA,UAAU,CAACC,KAAX,CAAiBN,UAAjB,CAAP;AACD,CAFD;;AAIA,IAAIN,YAAY,GAAG,cAAnB;AACAJ,OAAO,CAACI,YAAR,GAAuBA,YAAvB;;AAEA,SAASD,aAAT,GAAyB;AACvB,MAAIc,eAAe,GAAGV,KAAK,CAACW,QAAN,CAAe,EAAf,CAAtB;AAAA,MACIC,gBAAgB,GAAG,CAAC,GAAGb,eAAe,CAACJ,OAApB,EAA6Be,eAA7B,EAA8C,CAA9C,CADvB;AAAA,MAEIG,mBAAmB,GAAGD,gBAAgB,CAAC,CAAD,CAF1C;;AAIA,MAAIE,WAAW,GAAG,CAAC,GAAGd,KAAK,CAACe,MAAV,EAAkB,IAAIC,GAAJ,EAAlB,CAAlB;AACA,MAAIC,WAAW,GAAG,CAAC,GAAGjB,KAAK,CAACe,MAAV,EAAkB,IAAIC,GAAJ,EAAlB,CAAlB;;AAEA,MAAIE,gBAAgB,GAAGlB,KAAK,CAACW,QAAN,CAAe,EAAf,CAAvB;AAAA,MACIQ,gBAAgB,GAAG,CAAC,GAAGpB,eAAe,CAACJ,OAApB,EAA6BuB,gBAA7B,EAA+C,CAA/C,CADvB;AAAA,MAEIE,YAAY,GAAGD,gBAAgB,CAAC,CAAD,CAFnC;AAAA,MAGIE,eAAe,GAAGF,gBAAgB,CAAC,CAAD,CAHtC;;AAKA,MAAIG,SAAS,GAAG,CAAC,GAAGtB,KAAK,CAACe,MAAV,EAAkB,CAAlB,CAAhB;AACA,MAAIQ,UAAU,GAAG,CAAC,GAAGvB,KAAK,CAACe,MAAV,EAAkB,KAAlB,CAAjB;;AAEA,MAAIS,WAAW,GAAG,SAASA,WAAT,GAAuB;AACvC,QAAI,CAACD,UAAU,CAACE,OAAhB,EAAyB;AACvBZ,MAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACD;AACF,GAJD;;AAMA,MAAIa,YAAY,GAAG,CAAC,GAAG1B,KAAK,CAAC2B,WAAV,EAAuB,UAAUC,GAAV,EAAevB,OAAf,EAAwB;AAChE;AACA,QAAIwB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,OAAC,GAAG9B,QAAQ,CAACN,OAAb,EAAsB,CAACmB,WAAW,CAACW,OAAZ,CAAoBO,GAApB,CAAwBJ,GAAxB,CAAvB,EAAqD,mBAAmBK,MAAnB,CAA0BL,GAA1B,EAA+B,0BAA/B,EAA2DK,MAA3D,CAAkE5B,OAAO,CAACC,IAAR,CAAa,KAAb,CAAlE,EAAuF,GAAvF,CAArD;AACD,KAJ+D,CAI9D;;;AAGF,QAAI4B,aAAa,GAAG9B,UAAU,CAACC,OAAD,CAA9B;AACAY,IAAAA,WAAW,CAACQ,OAAZ,CAAoBU,GAApB,CAAwBD,aAAxB,EAAuCN,GAAvC;AACAd,IAAAA,WAAW,CAACW,OAAZ,CAAoBU,GAApB,CAAwBP,GAAxB,EAA6BM,aAA7B;AACAZ,IAAAA,SAAS,CAACG,OAAV,IAAqB,CAArB;AACA,QAAIW,EAAE,GAAGd,SAAS,CAACG,OAAnB;AACA,KAAC,GAAGvB,SAAS,CAACmC,SAAd,EAAyB,YAAY;AACnC,UAAID,EAAE,KAAKd,SAAS,CAACG,OAArB,EAA8B;AAC5BD,QAAAA,WAAW;AACZ;AACF,KAJD;AAKD,GAjBkB,EAiBhB,EAjBgB,CAAnB;AAkBA,MAAIc,cAAc,GAAG,CAAC,GAAGtC,KAAK,CAAC2B,WAAV,EAAuB,UAAUC,GAAV,EAAevB,OAAf,EAAwB;AAClE,QAAI6B,aAAa,GAAG9B,UAAU,CAACC,OAAD,CAA9B;AACAY,IAAAA,WAAW,CAACQ,OAAZ,CAAoBc,MAApB,CAA2BL,aAA3B;AACApB,IAAAA,WAAW,CAACW,OAAZ,CAAoBc,MAApB,CAA2BX,GAA3B;AACD,GAJoB,EAIlB,EAJkB,CAArB;AAKA,MAAIY,mBAAmB,GAAG,CAAC,GAAGxC,KAAK,CAAC2B,WAAV,EAAuB,UAAUc,IAAV,EAAgB;AAC/DpB,IAAAA,eAAe,CAACoB,IAAD,CAAf;AACD,GAFyB,EAEvB,EAFuB,CAA1B;AAGA,MAAIC,UAAU,GAAG,CAAC,GAAG1C,KAAK,CAAC2B,WAAV,EAAuB,UAAUgB,QAAV,EAAoBC,eAApB,EAAqC;AAC3E,QAAIC,QAAQ,GAAG/B,WAAW,CAACW,OAAZ,CAAoBqB,GAApB,CAAwBH,QAAxB,KAAqC,EAApD;AACA,QAAIF,IAAI,GAAGlC,WAAW,CAACsC,QAAD,CAAtB;;AAEA,QAAID,eAAe,IAAIxB,YAAY,CAAC2B,QAAb,CAAsBN,IAAI,CAAC,CAAD,CAA1B,CAAvB,EAAuD;AACrDA,MAAAA,IAAI,CAACO,OAAL,CAAanD,YAAb;AACD;;AAED,WAAO4C,IAAP;AACD,GATgB,EASd,CAACrB,YAAD,CATc,CAAjB;AAUA,MAAI6B,YAAY,GAAG,CAAC,GAAGjD,KAAK,CAAC2B,WAAV,EAAuB,UAAUuB,QAAV,EAAoBP,QAApB,EAA8B;AACtE,WAAOO,QAAQ,CAACC,IAAT,CAAc,UAAUC,OAAV,EAAmB;AACtC,UAAIC,WAAW,GAAGX,UAAU,CAACU,OAAD,EAAU,IAAV,CAA5B;AACA,aAAOC,WAAW,CAACN,QAAZ,CAAqBJ,QAArB,CAAP;AACD,KAHM,CAAP;AAID,GALkB,EAKhB,CAACD,UAAD,CALgB,CAAnB;;AAOA,MAAIY,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,QAAIb,IAAI,GAAG,CAAC,GAAG3C,mBAAmB,CAACH,OAAxB,EAAiCmB,WAAW,CAACW,OAAZ,CAAoBgB,IAApB,EAAjC,CAAX;;AAEA,QAAIrB,YAAY,CAACmC,MAAjB,EAAyB;AACvBd,MAAAA,IAAI,CAACe,IAAL,CAAU3D,YAAV;AACD;;AAED,WAAO4C,IAAP;AACD,GARD;AASA;AACF;AACA;;;AAGE,MAAIgB,cAAc,GAAG,CAAC,GAAGzD,KAAK,CAAC2B,WAAV,EAAuB,UAAUC,GAAV,EAAe;AACzD,QAAIM,aAAa,GAAG,GAAGD,MAAH,CAAUnB,WAAW,CAACW,OAAZ,CAAoBqB,GAApB,CAAwBlB,GAAxB,CAAV,EAAwCK,MAAxC,CAA+C9B,UAA/C,CAApB;AACA,QAAI+C,QAAQ,GAAG,IAAIQ,GAAJ,EAAf;AACA,KAAC,GAAG5D,mBAAmB,CAACH,OAAxB,EAAiCsB,WAAW,CAACQ,OAAZ,CAAoBgB,IAApB,EAAjC,EAA6DkB,OAA7D,CAAqE,UAAUP,OAAV,EAAmB;AACtF,UAAIA,OAAO,CAACQ,UAAR,CAAmB1B,aAAnB,CAAJ,EAAuC;AACrCgB,QAAAA,QAAQ,CAACW,GAAT,CAAa5C,WAAW,CAACQ,OAAZ,CAAoBqB,GAApB,CAAwBM,OAAxB,CAAb;AACD;AACF,KAJD;AAKA,WAAOF,QAAP;AACD,GAToB,EASlB,EATkB,CAArB;AAUAlD,EAAAA,KAAK,CAAC8D,SAAN,CAAgB,YAAY;AAC1B,WAAO,YAAY;AACjBvC,MAAAA,UAAU,CAACE,OAAX,GAAqB,IAArB;AACD,KAFD;AAGD,GAJD,EAIG,EAJH;AAKA,SAAO;AACL;AACAC,IAAAA,YAAY,EAAEA,YAFT;AAGLY,IAAAA,cAAc,EAAEA,cAHX;AAILE,IAAAA,mBAAmB,EAAEA,mBAJhB;AAKL;AACAS,IAAAA,YAAY,EAAEA,YANT;AAOLP,IAAAA,UAAU,EAAEA,UAPP;AAQLY,IAAAA,OAAO,EAAEA,OARJ;AASLG,IAAAA,cAAc,EAAEA;AATX,GAAP;AAWD","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useKeyRecords;\nexports.OVERFLOW_KEY = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _warning = _interopRequireDefault(require(\"rc-util/lib/warning\"));\n\nvar _timeUtil = require(\"../utils/timeUtil\");\n\nvar PATH_SPLIT = '__RC_UTIL_PATH_SPLIT__';\n\nvar getPathStr = function getPathStr(keyPath) {\n  return keyPath.join(PATH_SPLIT);\n};\n\nvar getPathKeys = function getPathKeys(keyPathStr) {\n  return keyPathStr.split(PATH_SPLIT);\n};\n\nvar OVERFLOW_KEY = 'rc-menu-more';\nexports.OVERFLOW_KEY = OVERFLOW_KEY;\n\nfunction useKeyRecords() {\n  var _React$useState = React.useState({}),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      internalForceUpdate = _React$useState2[1];\n\n  var key2pathRef = (0, React.useRef)(new Map());\n  var path2keyRef = (0, React.useRef)(new Map());\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      overflowKeys = _React$useState4[0],\n      setOverflowKeys = _React$useState4[1];\n\n  var updateRef = (0, React.useRef)(0);\n  var destroyRef = (0, React.useRef)(false);\n\n  var forceUpdate = function forceUpdate() {\n    if (!destroyRef.current) {\n      internalForceUpdate({});\n    }\n  };\n\n  var registerPath = (0, React.useCallback)(function (key, keyPath) {\n    // Warning for invalidate or duplicated `key`\n    if (process.env.NODE_ENV !== 'production') {\n      (0, _warning.default)(!key2pathRef.current.has(key), \"Duplicated key '\".concat(key, \"' used in Menu by path [\").concat(keyPath.join(' > '), \"]\"));\n    } // Fill map\n\n\n    var connectedPath = getPathStr(keyPath);\n    path2keyRef.current.set(connectedPath, key);\n    key2pathRef.current.set(key, connectedPath);\n    updateRef.current += 1;\n    var id = updateRef.current;\n    (0, _timeUtil.nextSlice)(function () {\n      if (id === updateRef.current) {\n        forceUpdate();\n      }\n    });\n  }, []);\n  var unregisterPath = (0, React.useCallback)(function (key, keyPath) {\n    var connectedPath = getPathStr(keyPath);\n    path2keyRef.current.delete(connectedPath);\n    key2pathRef.current.delete(key);\n  }, []);\n  var refreshOverflowKeys = (0, React.useCallback)(function (keys) {\n    setOverflowKeys(keys);\n  }, []);\n  var getKeyPath = (0, React.useCallback)(function (eventKey, includeOverflow) {\n    var fullPath = key2pathRef.current.get(eventKey) || '';\n    var keys = getPathKeys(fullPath);\n\n    if (includeOverflow && overflowKeys.includes(keys[0])) {\n      keys.unshift(OVERFLOW_KEY);\n    }\n\n    return keys;\n  }, [overflowKeys]);\n  var isSubPathKey = (0, React.useCallback)(function (pathKeys, eventKey) {\n    return pathKeys.some(function (pathKey) {\n      var pathKeyList = getKeyPath(pathKey, true);\n      return pathKeyList.includes(eventKey);\n    });\n  }, [getKeyPath]);\n\n  var getKeys = function getKeys() {\n    var keys = (0, _toConsumableArray2.default)(key2pathRef.current.keys());\n\n    if (overflowKeys.length) {\n      keys.push(OVERFLOW_KEY);\n    }\n\n    return keys;\n  };\n  /**\n   * Find current key related child path keys\n   */\n\n\n  var getSubPathKeys = (0, React.useCallback)(function (key) {\n    var connectedPath = \"\".concat(key2pathRef.current.get(key)).concat(PATH_SPLIT);\n    var pathKeys = new Set();\n    (0, _toConsumableArray2.default)(path2keyRef.current.keys()).forEach(function (pathKey) {\n      if (pathKey.startsWith(connectedPath)) {\n        pathKeys.add(path2keyRef.current.get(pathKey));\n      }\n    });\n    return pathKeys;\n  }, []);\n  React.useEffect(function () {\n    return function () {\n      destroyRef.current = true;\n    };\n  }, []);\n  return {\n    // Register\n    registerPath: registerPath,\n    unregisterPath: unregisterPath,\n    refreshOverflowKeys: refreshOverflowKeys,\n    // Util\n    isSubPathKey: isSubPathKey,\n    getKeyPath: getKeyPath,\n    getKeys: getKeys,\n    getSubPathKeys: getSubPathKeys\n  };\n}"]},"metadata":{},"sourceType":"script"}