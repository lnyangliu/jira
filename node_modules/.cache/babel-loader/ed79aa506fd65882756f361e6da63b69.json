{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport const isFalsy = value => value === 0 ? false : !value; // 不改变函数本身\n\nexport const cleanObject = object => {\n  const result = { ...object\n  };\n  Object.keys(result).forEach(key => {\n    const value = result[key];\n\n    if (isFalsy(value)) {\n      delete result[key];\n    }\n  });\n  return result;\n};\nexport const useMount = callback => {\n  _s();\n\n  useEffect(() => {\n    callback();\n  }, []);\n};\n\n_s(useMount, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport const useDebounce = (value, delay) => {\n  _s2();\n\n  const [debouncedValue, setdebouncedValue] = useState(value);\n  useEffect(() => {\n    const timeout = setTimeout(() => setdebouncedValue(value), delay); // 每次在上一次useEffect处理完以后再运行\n\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n  return debouncedValue;\n};\n\n_s2(useDebounce, \"xLyuMaXockJZHdnJ+VkLCK0VOJQ=\");","map":{"version":3,"sources":["/Users/liuyang/Documents/yideng/jira/src/utils/index.ts"],"names":["useEffect","useState","isFalsy","value","cleanObject","object","result","Object","keys","forEach","key","useMount","callback","useDebounce","delay","debouncedValue","setdebouncedValue","timeout","setTimeout","clearTimeout"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAIA,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAAwBA,KAAK,KAAK,CAAV,GAAc,KAAd,GAAsB,CAACA,KAA/D,C,CAEP;;AACA,OAAO,MAAMC,WAAW,GAAIC,MAAD,IAAgB;AACvC,QAAMC,MAAM,GAAG,EAAC,GAAGD;AAAJ,GAAf;AACAE,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAZ,EAAoBG,OAApB,CAA6BC,GAAD,IAAS;AACjC,UAAMP,KAAK,GAAGG,MAAM,CAACI,GAAD,CAApB;;AACA,QAAGR,OAAO,CAACC,KAAD,CAAV,EAAmB;AACf,aAAOG,MAAM,CAACI,GAAD,CAAb;AACH;AACJ,GALD;AAMA,SAAOJ,MAAP;AACH,CATM;AAWP,OAAO,MAAMK,QAAQ,GAAIC,QAAD,IAA0B;AAAA;;AAC9CZ,EAAAA,SAAS,CAAC,MAAM;AAChBY,IAAAA,QAAQ;AACP,GAFQ,EAEN,EAFM,CAAT;AAGH,CAJM;;GAAMD,Q;;AAMb,OAAO,MAAME,WAAW,GAAG,CAACV,KAAD,EAAaW,KAAb,KAAgC;AAAA;;AACvD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAACE,KAAD,CAApD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,OAAO,GAAGC,UAAU,CAAC,MAAMF,iBAAiB,CAACb,KAAD,CAAxB,EAAiCW,KAAjC,CAA1B,CADY,CAEZ;;AACA,WAAO,MAAMK,YAAY,CAACF,OAAD,CAAzB;AACH,GAJQ,EAIN,CAACd,KAAD,EAAQW,KAAR,CAJM,CAAT;AAKA,SAAOC,cAAP;AACH,CATM;;IAAMF,W","sourcesContent":["import {useEffect, useState} from 'react'\nimport {Project} from 'screens/project-list/list'\n\n\nexport const isFalsy = (value: any): boolean=> value === 0 ? false : !value;\n\n// 不改变函数本身\nexport const cleanObject = (object: Ob) => {\n    const result = {...object}\n    Object.keys(result).forEach((key) => {\n        const value = result[key]\n        if(isFalsy(value)) {\n            delete result[key]\n        }\n    })\n    return result;\n}\n\nexport const useMount = (callback: () => void) => {\n    useEffect(() => {\n    callback()\n    }, [])\n}\n\nexport const useDebounce = (value: any, delay?: number) => {\n    const [debouncedValue, setdebouncedValue] = useState(value)\n\n    useEffect(() => {\n        const timeout = setTimeout(() => setdebouncedValue(value), delay)\n        // 每次在上一次useEffect处理完以后再运行\n        return () => clearTimeout(timeout)\n    }, [value, delay])\n    return debouncedValue;\n}"]},"metadata":{},"sourceType":"module"}